/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AdminPannel;

import UniversalHandler.DerbyConnect;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alexmasse
 */
public class AdminPage extends javax.swing.JFrame {

    /**
     * Creates new form Search
     */
    public AdminPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        submit = new javax.swing.JButton();
        searchField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        ddm = new javax.swing.JComboBox<>();
        AddEmpl = new javax.swing.JButton();
        DelCust = new javax.swing.JButton();
        AddCust = new javax.swing.JButton();
        DelEmpl = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        ddm1 = new javax.swing.JComboBox<>();
        pop = new javax.swing.JButton();

        jMenu1.setText("jMenu1");

        jMenu2.setText("File");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Edit");
        jMenuBar1.add(jMenu3);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        submit.setBackground(new java.awt.Color(0, 204, 102));
        submit.setText("Search");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Nanum Brush Script", 0, 48)); // NOI18N
        jLabel1.setText("ADMIN Program!!!");

        ddm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CUSTOMER","EMPLOYEE"}));

        AddEmpl.setBackground(new java.awt.Color(51, 51, 51));
        AddEmpl.setText("Add Employee");
        AddEmpl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddEmplActionPerformed(evt);
            }
        });

        DelCust.setBackground(new java.awt.Color(51, 51, 51));
        DelCust.setText("Delete Customer");
        DelCust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelCustActionPerformed(evt);
            }
        });

        AddCust.setBackground(new java.awt.Color(51, 51, 51));
        AddCust.setText("Add Customer");
        AddCust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddCustActionPerformed(evt);
            }
        });

        DelEmpl.setBackground(new java.awt.Color(51, 51, 51));
        DelEmpl.setText("Delete Employee");
        DelEmpl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelEmplActionPerformed(evt);
            }
        });

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Address", "PhoneNo"
            }
        ));
        jScrollPane3.setViewportView(Table);

        ddm1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID","NAME", "ADDRESS", "PHONENO"}));

        pop.setBackground(new java.awt.Color(255, 255, 204));
        pop.setForeground(new java.awt.Color(153, 0, 0));
        pop.setText("Pop");
        pop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(AddCust, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DelCust, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(AddEmpl))
                            .addComponent(DelEmpl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ddm, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ddm1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(submit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pop, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AddCust)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DelCust))
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AddEmpl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DelEmpl)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ddm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ddm1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submit)
                    .addComponent(pop))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        submitActionPerformed(evt);
    }//GEN-LAST:event_searchFieldActionPerformed

    private void AddEmplActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddEmplActionPerformed
        AddEmp.add();
    }//GEN-LAST:event_AddEmplActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
         try {
            getSearchField();
        } catch (SQLException ex) {
            System.out.println("Error: "+ex);
        }
    }//GEN-LAST:event_submitActionPerformed

    private void DelCustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelCustActionPerformed
        DerbyConnect db=new DerbyConnect();
        String selectedCat= String.valueOf(ddm.getSelectedItem());
        String selectedCat2= String.valueOf(ddm1.getSelectedItem());
        String selectedCat3= selectedCat+selectedCat2;
        String sql="DELETE FROM "+selectedCat+" WHERE "+selectedCat3+"='"+searchField.getText()+"'";
        Statement stmt=db.st();
        try {
            stmt.execute(sql);
        } catch (SQLException ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DelCustActionPerformed

    private void AddCustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddCustActionPerformed
       AddCus.add();
    }//GEN-LAST:event_AddCustActionPerformed

    private void DelEmplActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelEmplActionPerformed
                String selectedCat= String.valueOf(ddm.getSelectedItem());
        String selectedCat2= String.valueOf(ddm1.getSelectedItem());
        String selectedCat3= selectedCat+selectedCat2;
        DerbyConnect db=new DerbyConnect();
        String sql="DELETE FROM "+selectedCat+" WHERE "+selectedCat3+"='"+searchField.getText()+"'";
        Statement stmt=db.st();
        try {
            stmt.execute(sql);
        } catch (SQLException ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DelEmplActionPerformed

    private void popActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popActionPerformed
        Populate p = new Populate();
        try {
            p.populateCustomers();
            p.populateEmployees();
            p.populateParts();
            p.populateSold();
            p.populateCars();
        } catch (SQLException ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_popActionPerformed

    /**
     * @param args the command line arguments
     */

    public static void AdminMain() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        DerbyConnect conn=new DerbyConnect();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminPage().setVisible(true);
            }
        });
    }

    private DefaultTableModel getSearchField() throws SQLException
    {
        String selectedCat= String.valueOf(ddm.getSelectedItem());
        String selectedCat2= String.valueOf(ddm1.getSelectedItem());
        String selectedCat3= selectedCat+selectedCat2;
        String sql="SELECT * FROM "+selectedCat+" WHERE "+selectedCat3+"='" + searchField.getText() + "'";
        DerbyConnect db=new DerbyConnect();
        Statement stmt=db.st();
        DefaultTableModel model=(DefaultTableModel)Table.getModel();
        model.setRowCount(0);
        String[] loadCar=new String[4];
        try{
            ResultSet rs=stmt.executeQuery(sql);
            while (rs.next())//have to make it so that it only keeps the number one time.
            {
                for(int i=0;i<loadCar.length;i++)
                {
                    loadCar[i]=rs.getString(i+1);
                }
                model.addRow(new Object[]{loadCar[0],loadCar[1],loadCar[2],loadCar[3]});
            }
            rs.close();
            stmt.close();
        }
        catch(SQLException ex)
        {
           System.out.println("SQLException(ListAll): " + ex.getMessage());
        }
        return model;
    }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddCust;
    private javax.swing.JButton AddEmpl;
    private javax.swing.JButton DelCust;
    private javax.swing.JButton DelEmpl;
    private javax.swing.JTable Table;
    private javax.swing.JComboBox<String> ddm;
    private javax.swing.JComboBox<String> ddm1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton pop;
    private javax.swing.JTextField searchField;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables
}
